{"ast":null,"code":"import * as actions from '../actions/types';\nconst initialState = {\n  launchData: null,\n  loading: false,\n  error: false,\n  success: false\n};\n\nconst launchProgramReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.LAUNCH_DATA_FETCH_START:\n      {\n        return { ...state,\n          loading: true,\n          error: false\n        };\n      }\n\n    case actions.LAUNCH_DATA_FETCH_ERROR:\n      {\n        return {\n          launchData: null,\n          loading: false,\n          error: true,\n          success: false\n        };\n      }\n\n    case actions.LAUNCH_DATA_FETCH_SUCCESS:\n      {\n        return {\n          launchData: action.payload.map(data => {\n            return {\n              mission_patch_small: data.links.mission_patch_small,\n              mission_name: data.mission_name,\n              mission_id: data.mission_id,\n              launch_year: data.launch_year,\n              launch_success: data.launch_success + \"\",\n              flight_number: data.flight_number,\n              landing_success: data.rocket.first_stage.cores.some(core => core.land_success === null) ? \"NA\" : data.rocket.first_stage.cores.every(core => core.land_success) + \"\"\n            };\n          }),\n          loading: false,\n          error: false,\n          success: true\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default launchProgramReducer;","map":{"version":3,"sources":["F:/spacex-launch-programs-master/src/redux/reducers/launchProgramReducer.js"],"names":["actions","initialState","launchData","loading","error","success","launchProgramReducer","state","action","type","LAUNCH_DATA_FETCH_START","LAUNCH_DATA_FETCH_ERROR","LAUNCH_DATA_FETCH_SUCCESS","payload","map","data","mission_patch_small","links","mission_name","mission_id","launch_year","launch_success","flight_number","landing_success","rocket","first_stage","cores","some","core","land_success","every"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,IADK;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE,KAHU;AAIjBC,EAAAA,OAAO,EAAE;AAJQ,CAArB;;AAOA,MAAMC,oBAAoB,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,OAAO,CAACU,uBAAb;AAAsC;AAClC,eAAO,EACH,GAAGH,KADA;AAEHJ,UAAAA,OAAO,EAAE,IAFN;AAGHC,UAAAA,KAAK,EAAE;AAHJ,SAAP;AAKH;;AACD,SAAKJ,OAAO,CAACW,uBAAb;AAAsC;AAClC,eAAO;AACHT,UAAAA,UAAU,EAAE,IADT;AAEHC,UAAAA,OAAO,EAAE,KAFN;AAGHC,UAAAA,KAAK,EAAE,IAHJ;AAIHC,UAAAA,OAAO,EAAE;AAJN,SAAP;AAMH;;AACD,SAAKL,OAAO,CAACY,yBAAb;AAAwC;AACpC,eAAO;AACHV,UAAAA,UAAU,EAAEM,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAmBC,IAAI,IAAI;AACnC,mBAAO;AACHC,cAAAA,mBAAmB,EAAED,IAAI,CAACE,KAAL,CAAWD,mBAD7B;AAEHE,cAAAA,YAAY,EAAEH,IAAI,CAACG,YAFhB;AAGHC,cAAAA,UAAU,EAAEJ,IAAI,CAACI,UAHd;AAIHC,cAAAA,WAAW,EAAEL,IAAI,CAACK,WAJf;AAKHC,cAAAA,cAAc,EAAEN,IAAI,CAACM,cAAL,GAAsB,EALnC;AAMHC,cAAAA,aAAa,EAAEP,IAAI,CAACO,aANjB;AAOHC,cAAAA,eAAe,EAAER,IAAI,CAACS,MAAL,CAAYC,WAAZ,CAAwBC,KAAxB,CAA8BC,IAA9B,CAAmCC,IAAI,IAAIA,IAAI,CAACC,YAAL,KAAsB,IAAjE,IAAyE,IAAzE,GACXd,IAAI,CAACS,MAAL,CAAYC,WAAZ,CAAwBC,KAAxB,CAA8BI,KAA9B,CAAoCF,IAAI,IAAIA,IAAI,CAACC,YAAjD,IAAiE;AARpE,aAAP;AAUH,WAXW,CADT;AAaH1B,UAAAA,OAAO,EAAE,KAbN;AAcHC,UAAAA,KAAK,EAAE,KAdJ;AAeHC,UAAAA,OAAO,EAAE;AAfN,SAAP;AAiBH;;AACD;AAAS;AACL,eAAOE,KAAP;AACH;AArCL;AAuCH,CAxCD;;AA0CA,eAAeD,oBAAf","sourcesContent":["import * as actions from '../actions/types'\n\nconst initialState = {\n    launchData: null,\n    loading: false,\n    error: false,\n    success: false\n}\n\nconst launchProgramReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LAUNCH_DATA_FETCH_START: {\n            return {\n                ...state,\n                loading: true,\n                error: false,\n            }\n        }\n        case actions.LAUNCH_DATA_FETCH_ERROR: {\n            return {\n                launchData: null,\n                loading: false,\n                error: true,\n                success: false\n            }\n        }\n        case actions.LAUNCH_DATA_FETCH_SUCCESS: {\n            return {\n                launchData: action.payload.map(data => {\n                    return {\n                        mission_patch_small: data.links.mission_patch_small,\n                        mission_name: data.mission_name,\n                        mission_id: data.mission_id,\n                        launch_year: data.launch_year,\n                        launch_success: data.launch_success + \"\",\n                        flight_number: data.flight_number,\n                        landing_success: data.rocket.first_stage.cores.some(core => core.land_success === null) ? \"NA\"\n                            : data.rocket.first_stage.cores.every(core => core.land_success) + \"\"\n                    }\n                }),\n                loading: false,\n                error: false,\n                success: true\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default launchProgramReducer"]},"metadata":{},"sourceType":"module"}