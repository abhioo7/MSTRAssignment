{"ast":null,"code":"var _jsxFileName = \"F:\\\\spacex-launch-programs-master\\\\src\\\\pages\\\\LaunchProgram\\\\LaunchProgram.js\";\nimport React from 'react';\nimport LaunchFilters from '../../components/LaunchFilters/LaunchFilters';\nimport LauchList from '../../components/LaunchList/LaunchList';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { connect } from 'react-redux';\nimport { fetchLaunchData } from '../../redux/actions';\nimport { getParam, setParam } from '../../params/utils';\nimport './LaunchProgram.css';\nexport class LaunchProgram extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filterData: [{\n        type: \"launch_year\",\n        displayName: \"Launch Year\",\n        data: new Array(new Date().getFullYear() - 2005).fill().map((a, i) => 2006 + i),\n        activeItem: this.props.query[\"launch_year\"] && parseInt(this.props.query[\"launch_year\"])\n      }, {\n        type: \"launch_success\",\n        displayName: \"Successful Launch\",\n        data: [\"true\", \"false\"],\n        activeItem: this.props.query[\"launch_success\"]\n      }, {\n        type: \"land_success\",\n        displayName: \"Successful Landing\",\n        data: [\"true\", \"false\"],\n        activeItem: this.props.query[\"land_success\"]\n      }],\n      queryString: setParam(this.props.query),\n      dataLimit: 50\n    };\n\n    this.fetchMoreData = () => {\n      this.setState(prevState => {\n        return {\n          dataLimit: prevState.dataLimit + 50\n        };\n      });\n    };\n\n    this.onFilterApply = (category, value) => {\n      const currentQueries = getParam(this.state.queryString);\n      const currentCategory = { ...this.state.filterData.find(filterCategory => filterCategory.type === category)\n      };\n\n      if (currentCategory.activeItem && currentCategory.activeItem === value) {\n        currentQueries[category] = null;\n        currentCategory.activeItem = null;\n      } else {\n        currentCategory.activeItem = value;\n        currentQueries[category] = value;\n      }\n\n      const queryString = setParam(currentQueries);\n      this.props.history.push(\"?\" + queryString);\n      this.setState(prevState => {\n        return {\n          filterData: prevState.filterData.map(filterCategory => filterCategory.type === category ? currentCategory : filterCategory),\n          queryString: queryString\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchLaunchData(`?limit=${this.state.dataLimit}${this.state.queryString && \"&\" + this.state.queryString}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.queryString !== this.state.queryString || prevState.dataLimit !== this.state.dataLimit) {\n      this.props.fetchLaunchData(`?limit=${this.state.dataLimit}${this.state.queryString && \"&\" + this.state.queryString}`);\n    }\n  }\n\n  render() {\n    let launchList = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 26\n      }\n    });\n\n    if (this.props.launchProgram.success) {\n      launchList = /*#__PURE__*/React.createElement(LauchList, {\n        launchData: this.props.launchProgram.launchData,\n        dataLimit: this.state.dataLimit,\n        fetchMoreData: this.fetchMoreData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      });\n    } else if (this.props.launchProgram.error) {\n      launchList = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"no-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 51\n        }\n      }, \"Error occurred while fetching data\"));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LaunchFilters, {\n      filterData: this.state.filterData,\n      onFilterApply: this.onFilterApply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), launchList, this.props.launchProgram.loading && /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 54\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    launchProgram: state.launchProgram\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchLaunchData\n})(LaunchProgram);","map":{"version":3,"sources":["F:/spacex-launch-programs-master/src/pages/LaunchProgram/LaunchProgram.js"],"names":["React","LaunchFilters","LauchList","Spinner","connect","fetchLaunchData","getParam","setParam","LaunchProgram","Component","state","filterData","type","displayName","data","Array","Date","getFullYear","fill","map","a","i","activeItem","props","query","parseInt","queryString","dataLimit","fetchMoreData","setState","prevState","onFilterApply","category","value","currentQueries","currentCategory","find","filterCategory","history","push","componentDidMount","componentDidUpdate","prevProps","render","launchList","launchProgram","success","launchData","error","loading","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LaunchFilters from '../../components/LaunchFilters/LaunchFilters';\nimport LauchList from '../../components/LaunchList/LaunchList';\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport { connect } from 'react-redux';\nimport { fetchLaunchData } from '../../redux/actions';\nimport { getParam, setParam } from '../../params/utils';\nimport './LaunchProgram.css';\n\n\nexport class LaunchProgram extends React.Component {\n\n    state = {\n        filterData: [{\n            type: \"launch_year\",\n            displayName: \"Launch Year\",\n            data: new Array((new Date().getFullYear() - 2005)).fill().map((a, i) => 2006 + i),\n            activeItem: this.props.query[\"launch_year\"] && parseInt(this.props.query[\"launch_year\"])\n        },\n        {\n            type: \"launch_success\",\n            displayName: \"Successful Launch\",\n            data: [\"true\", \"false\"],\n            activeItem: this.props.query[\"launch_success\"]\n        },\n        {\n            type: \"land_success\",\n            displayName: \"Successful Landing\",\n            data: [\"true\", \"false\"],\n            activeItem: this.props.query[\"land_success\"]\n        }],\n        queryString: setParam(this.props.query),\n        dataLimit: 50\n    }\n\n    componentDidMount() {\n        this.props.fetchLaunchData(`?limit=${this.state.dataLimit}${this.state.queryString && \"&\" + this.state.queryString}`);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if ((prevState.queryString !== this.state.queryString) || (prevState.dataLimit !== this.state.dataLimit)) {\n            this.props.fetchLaunchData(`?limit=${this.state.dataLimit}${this.state.queryString && \"&\" + this.state.queryString}`);\n        }\n    }\n\n    fetchMoreData = () => {\n        this.setState((prevState) => {\n            return {\n                dataLimit: prevState.dataLimit + 50\n            }\n        })\n    }\n\n    onFilterApply = (category, value) => {\n        const currentQueries = getParam(this.state.queryString);\n        const currentCategory = { ...this.state.filterData.find(filterCategory => filterCategory.type === category) };\n\n        if (currentCategory.activeItem && currentCategory.activeItem === value) {\n            currentQueries[category] = null;\n            currentCategory.activeItem = null;\n        }\n        else {\n            currentCategory.activeItem = value;\n            currentQueries[category] = value;\n        }\n        const queryString = setParam(currentQueries);\n\n        this.props.history.push(\"?\" + queryString);\n        this.setState(prevState => {\n            return {\n                filterData: prevState.filterData.map(filterCategory => filterCategory.type === category ? currentCategory : filterCategory),\n                queryString: queryString\n            }\n        })\n    }\n\n    render() {\n        let launchList = <div></div>;\n\n        if (this.props.launchProgram.success) {\n            launchList =\n                <LauchList\n                    launchData={this.props.launchProgram.launchData}\n                    dataLimit={this.state.dataLimit}\n                    fetchMoreData={this.fetchMoreData} />\n        }\n        else if (this.props.launchProgram.error) {\n            launchList = <div className=\"no-data\"><h2>Error occurred while fetching data</h2></div>\n        }\n\n        return <>\n                <LaunchFilters filterData={this.state.filterData} onFilterApply={this.onFilterApply} />\n                {launchList}\n                {this.props.launchProgram.loading && <Spinner />}\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        launchProgram: state.launchProgram\n    }\n}\nexport default connect(mapStateToProps, { fetchLaunchData })(LaunchProgram)\n"]},"metadata":{},"sourceType":"module"}